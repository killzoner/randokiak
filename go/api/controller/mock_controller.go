// Code generated by MockGen. DO NOT EDIT.
// Source: controller.go

// Package controller is a generated GoMock package.
package controller

import (
	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIController is a mock of IController interface
type MockIController struct {
	ctrl     *gomock.Controller
	recorder *MockIControllerMockRecorder
}

// MockIControllerMockRecorder is the mock recorder for MockIController
type MockIControllerMockRecorder struct {
	mock *MockIController
}

// NewMockIController creates a new mock instance
func NewMockIController(ctrl *gomock.Controller) *MockIController {
	mock := &MockIController{ctrl: ctrl}
	mock.recorder = &MockIControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIController) EXPECT() *MockIControllerMockRecorder {
	return m.recorder
}

// AskMoreProfiles mocks base method
func (m *MockIController) AskMoreProfiles(ctx *gin.Context, connectors *IConnectors) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AskMoreProfiles", ctx, connectors)
}

// AskMoreProfiles indicates an expected call of AskMoreProfiles
func (mr *MockIControllerMockRecorder) AskMoreProfiles(ctx, connectors interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AskMoreProfiles", reflect.TypeOf((*MockIController)(nil).AskMoreProfiles), ctx, connectors)
}
